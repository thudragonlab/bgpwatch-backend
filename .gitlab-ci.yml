####提示
# 1.以下脚本设置的是master分支被合并时执行（设置为平常用来发版本的分支即可）
# 2.版本自动化部署到nginx下
# 3.执行yml脚本的runner名字设置的vue-runner1,即对应tags

#cache:
#    key: ${CI_COMMIT_REF_SLUG}
#    paths:
#      - config.json
#      - logs/

stages: # Stages 表示构建阶段，这里有两个阶段 install, deploy
- build


build-staging-test: # Jobs 表示构建工作，表示某个 Stage 里面执行的工作。
  stage: build
  tags:
    - python-test-226 #runner执行器的名字,与注册runner时填写的tags保持一致
  only: # 定义了只有在被merge到了master分支上 才会执行部署脚本。
  - test-branch
  script:
#    - bash prepareENV.sh
#    - chmod 777 "logs/access.logs"
    - cp ./config/config.test.json ./config.json
    - pip3 install -r requirements
    - supervisorctl restart BGP—backend
    - supervisorctl restart BGP—interval-task-backend
    - cp ./config/run_save_domain_result_in_db.sh ./domain.sh
#    - sed -i 's#/Users/zdp/.ssh/lg#/root/.ssh/HW_id_rsa#g' domain.sh
  artifacts: {}

cp-domain-handler-staging-test: # Jobs 表示构建工作，表示某个 Stage 里面执行的工作。
  stage: build
  tags:
    - domain-handler #runner执行器的名字,与注册runner时填写的tags保持一致
  only: # 定义了只有在被merge到了master分支上 才会执行部署脚本。
    - test-branch
    - master
  script:
    #    - bash prepareENV.sh
    #    - chmod 777 "logs/access.logs"
    - cp ./config/config.test.json /root/domain/config.json
    - cp ./python_script/domain-handler.py /root/domain/domain-handler.py

  artifacts: {}